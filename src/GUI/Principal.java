/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DOMINIO.DatosConexion;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import DOMINIO.DiccionarioDatos;
import Logica.Controlador;
import com.sun.xml.internal.ws.api.message.Message;
import static java.awt.Color.black;
import java.awt.Component;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableColumnModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;

/**
 *
 * @author cristian
 */
public class Principal extends javax.swing.JFrame {

    DiccionarioDatos dd;
    DatosConexion dc;
    ArrayList<DatosConexion> conexiones;
    ArrayList<DatosConexion> conexionescargadas;
    formulario form ;
    Controlador controlador;
    DefaultMutableTreeNode raiz;

    public Controlador getCoordinador() {
        return controlador;
    }

    public void setCoordinador(Controlador controlador) {
        this.controlador = controlador;
    }
    
    public Principal() {
        initComponents();
        dc = new DatosConexion();
        dd = new DiccionarioDatos();
        setResizable(false);
        setLocationRelativeTo(null);
        conexiones = new ArrayList<>();
        conexionescargadas = new ArrayList<>();
        deshabilitarTab2();
       
        deshabilitarOpcionesAdmin();
        btnDesconectar.setVisible(false);
        reiniciarJTable(tblResultados);
        raiz=new DefaultMutableTreeNode("tablas");
        
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnconsultaTablas = new javax.swing.JButton();
        btnconsultaDataFiles = new javax.swing.JButton();
        btnconsultaTablaspaces = new javax.swing.JButton();
        btnconsultaBaseDatos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultados = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbxUsuario = new javax.swing.JComboBox<>();
        txtpass = new javax.swing.JPasswordField();
        btnConectarU = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResultadoTabla = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnDesconectar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();

        jButton1.setText("SALIR");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Consultas al Diccionario de Datos");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnconsultaTablas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnconsultaTablas.setText("Informacion De las Tablas");
        btnconsultaTablas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultaTablasActionPerformed(evt);
            }
        });

        btnconsultaDataFiles.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnconsultaDataFiles.setText("Datafile");
        btnconsultaDataFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultaDataFilesActionPerformed(evt);
            }
        });

        btnconsultaTablaspaces.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnconsultaTablaspaces.setText("TablaSpaces");
        btnconsultaTablaspaces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultaTablaspacesActionPerformed(evt);
            }
        });

        btnconsultaBaseDatos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnconsultaBaseDatos.setText("Informacion Base De Datos");
        btnconsultaBaseDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconsultaBaseDatosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnconsultaBaseDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnconsultaDataFiles, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnconsultaTablaspaces, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnconsultaTablas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnconsultaTablas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnconsultaTablaspaces)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnconsultaDataFiles)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnconsultaBaseDatos)
                .addGap(45, 45, 45))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setForeground(new java.awt.Color(204, 255, 255));

        tblResultados.setForeground(new java.awt.Color(51, 153, 0));
        tblResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblResultados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblResultadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblResultados);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Resultado de la consulta:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel5)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jLabel7.setText("Usuario:");

        jLabel8.setText("Contraseña:");

        txtpass.setText("jTextField1");

        btnConectarU.setText("Conectar");
        btnConectarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarUActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(20, 20, 20))
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbxUsuario, 0, 184, Short.MAX_VALUE)
                    .addComponent(txtpass)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnConectarU)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbxUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConectarU)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel5.setForeground(new java.awt.Color(204, 255, 255));

        jLabel9.setText("Resultado De La Tabla");

        tblResultadoTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblResultadoTabla);

        jButton2.setText("Datos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Columnas");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Agregar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jLabel9)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDesconectar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDesconectar.setText("Desconectar");
        btnDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesconectarActionPerformed(evt);
            }
        });

        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTree1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnDesconectar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(237, 237, 237)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDesconectar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnconsultaTablasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultaTablasActionPerformed
//        reiniciarJTable(jTable1);
        JOptionPane.showMessageDialog(rootPane, "Información de todas las Tablas");
        ejecutarSelect(dd.consultaTablas());
       
       
    
    }//GEN-LAST:event_btnconsultaTablasActionPerformed

    private void btnconsultaDataFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultaDataFilesActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Informacion de los Datafiles");
        ejecutarSelect(dd.consultaDatafiles());
      
    }//GEN-LAST:event_btnconsultaDataFilesActionPerformed

    private void btnconsultaTablaspacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultaTablaspacesActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Informacion de los Tablespaces");
        ejecutarSelect(dd.consultaTablespaces());
    
    }//GEN-LAST:event_btnconsultaTablaspacesActionPerformed

    private void btnconsultaBaseDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconsultaBaseDatosActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Informacion de la BaseDatos");
        ejecutarSelect(dd.consultaBaseDatos());
        
    }//GEN-LAST:event_btnconsultaBaseDatosActionPerformed

    private void btnDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesconectarActionPerformed
        try {
            dd.cerrarConexion();
            dd.cargar();
            dd = new DiccionarioDatos();
            
            habilitarTab2();
            deshabilitarOpcionesAdmin();
            btnDesconectar.setVisible(false);
            reiniciarJTable(tblResultados);
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
   
    }//GEN-LAST:event_btnDesconectarActionPerformed

    private void btnConectarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarUActionPerformed
        if (txtpass.getText().length() > 0) {
            DatosConexion data = new DatosConexion();
            for (int i = 0; i < conexionescargadas.size(); i++) //se recorre todo el array de conexiones
            {
                String user = conexionescargadas.get(i).getUsuario();
                if (user.equalsIgnoreCase(cbxUsuario.getSelectedItem().toString())) {
                    dc = conexionescargadas.get(i);
                    if (txtpass.getText().equals(dc.getPassword())) {
                        if (dd.conexion(dc)) {
                            try {
                                JOptionPane.showMessageDialog(null, "Conectado!");
                          
                                deshabilitarTab2();
                                ResultSet set = dd.consultaTipoUsuario(dc.getUsuario());
                                boolean bn = set.next();
                                String admin = (String) set.getString(1);
                                if (admin.equalsIgnoreCase("yes")) {
                                    habilitarOpcionesAdmin();
                                } else {
                                    jPanel1.setVisible(true);
                                    btnconsultaTablas.setVisible(true);
                                }
                                btnDesconectar.setVisible(true);
                            } catch (SQLException ex) {
                                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "No se pudo establecer conexión!");
                        }
                    }
                    txtpass.setText("");
                    continue;
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "ingrese la contraseña!");
        }
        
    }//GEN-LAST:event_btnConectarUActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        form = new formulario(tblResultadoTabla.getColumnModel());
        
        this.setEnabled(false);
        form.setVisible(true);
        
        
        
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int fila=tblResultados.getSelectedRow();
        String bd_tabla = "";
        bd_tabla=(String)tblResultados.getValueAt(fila, 0);
      
        try {
            tblResultadoTabla.setModel(construirModeloDeDatos(dd.consultarDatosTabla(bd_tabla)));
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         int fila=tblResultados.getSelectedRow();
        String bd_tabla = "";
        bd_tabla=(String)tblResultados.getValueAt(fila, 0);
        try {
            construirModelo(dd.consultaTablas(), bd_tabla);
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tblResultadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblResultadosMouseClicked
        // TODO add your handling code here:
        int fila=tblResultados.getSelectedRow();
        String bd_tabla = "";
        bd_tabla=(String)tblResultados.getValueAt(fila, 0);
        try {
            construirModelo(dd.consultaTablas(), bd_tabla);
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_tblResultadosMouseClicked

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        // TODO add your handling code here:
        int fila= jTree1.getMinSelectionRow();
        DefaultMutableTreeNode selectedNode = 
       (DefaultMutableTreeNode)jTree1.getLastSelectedPathComponent();
        
        try {
            construirarbol(dd.ConsultarTabla(selectedNode.toString()),selectedNode);
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.println("--"+selectedNode.toString());
        
        
        
    }//GEN-LAST:event_jTree1MouseClicked
    
    public DiccionarioDatos getDd() {
        return dd;
    }

    public DatosConexion getDc() {
        return dc;
    }

    private void cargarConexiones() {
        cbxUsuario.removeAllItems();
        for (int i = 0; i < conexionescargadas.size(); i++) {
            cbxUsuario.addItem(conexionescargadas.get(i).getUsuario());
        }
    }

    private void habilitarOpcionesAdmin() {
        jPanel1.setVisible(true);
        btnconsultaTablas.setVisible(true);
        btnconsultaTablaspaces.setVisible(true);
        btnconsultaDataFiles.setVisible(true);
        btnconsultaBaseDatos.setVisible(true);
    }

    private void deshabilitarOpcionesAdmin() {
        jPanel1.setVisible(false);
        btnconsultaTablas.setVisible(false);
        btnconsultaTablaspaces.setVisible(false);
        btnconsultaDataFiles.setVisible(false);
        btnconsultaBaseDatos.setVisible(false);
    }

    

    
    private void habilitarTab2() {
        btnConectarU.setVisible(true);
        cbxUsuario.enable(true);
        txtpass.enable(true);
        cargarConexiones();
    }

    private void deshabilitarTab2() {
        btnConectarU.setVisible(false);
        cbxUsuario.enable(false);
        txtpass.enable(false);
    }

    private void ejecutarSelect(ResultSet resulSet) {
        try {
           // tblResultados.setModel(construirModeloDeDatos(resulSet));
             construirarbol(resulSet,this.raiz);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }

    public static void reiniciarJTable(javax.swing.JTable Tabla) {
        DefaultTableModel modelo = (DefaultTableModel) Tabla.getModel();
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }

        TableColumnModel modCol = Tabla.getColumnModel();
        while (modCol.getColumnCount() > 0) {
            modCol.removeColumn(modCol.getColumn(0));
        }
    }

    private static DefaultTableModel construirModeloDeDatos(ResultSet rs) throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }
        
        return new DefaultTableModel(data, columnNames);
          
    }

    private void construirModelo(ResultSet rs, String nombre) throws SQLException {
        int aux = 0;
        ResultSetMetaData metaData = rs.getMetaData();
        int columnCount = metaData.getColumnCount();
        while (rs.next()) {
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                rs.getObject(columnIndex);
                if (rs.getObject(1).equals(nombre)) {
                    contruir(rs.getObject(1).toString());
                    aux = 1;
                }
            }
        }
        if (aux == 0) {
            JOptionPane.showMessageDialog(null, "la tabla que buscas no esta en la base de datos !");
            
        }
    }

    private void contruir(String object) {
        ejecutar(dd.ConsultarTabla(object));
    }

    private void ejecutar(ResultSet resulSet) {
        try {
            tblResultadoTabla.setModel(construirModeloDeDatos(resulSet));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }
    //Metodos para camellarle al arbol
       
   private void construirarbol(ResultSet rs, DefaultMutableTreeNode r ) throws SQLException {
       
       
      while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            vector.add(rs.getObject(1));
            DefaultMutableTreeNode prs = new DefaultMutableTreeNode(vector.get(0));
            r.add(prs);
            
        
        }
        DefaultTreeModel modelo = new DefaultTreeModel(this.raiz);
        this.jTree1.setModel(modelo);
    }
  

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectarU;
    private javax.swing.JButton btnDesconectar;
    private javax.swing.JButton btnconsultaBaseDatos;
    private javax.swing.JButton btnconsultaDataFiles;
    private javax.swing.JButton btnconsultaTablas;
    private javax.swing.JButton btnconsultaTablaspaces;
    private javax.swing.JComboBox<String> cbxUsuario;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTree jTree1;
    private javax.swing.JTable tblResultadoTabla;
    private javax.swing.JTable tblResultados;
    private javax.swing.JPasswordField txtpass;
    // End of variables declaration//GEN-END:variables
}
